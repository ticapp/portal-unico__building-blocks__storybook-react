@use '../../../scss/customs.scss' as index;

$threshold: 55%;

@function contrast-color($color, $dark, $light) {
  @return if(lightness($color) < $threshold, $light, $dark);
}

@function check-light($color, $color-contrast-light) {
  @return if($color == $color-contrast-light, $color, index.$neutral-white);
}

@function findColor($color, $term) {
  $name-color: str-insert(str-slice($color, 1, -5), $term, 100);
  $value: map-get(index.$theme-colors, $name-color);
  @return $value;
}

@each $color, $value in index.$theme-colors {
  .btn-#{$color} {
    @include index.button-variant(
      $background: $value,
      $border: $value,
      $color: contrast-color($value, $value, index.$neutral-white),
      $hover-background: check-light($value, index.$color-contrast-light) !important,
      $hover-border: $value,
      $hover-color: contrast-color(check-light($value, index.$color-contrast-light), $value, index.$neutral-white) !important,
      $active-background: check-light($value, transparent),
      $active-border: $value,
      $active-color: contrast-color($value, index.$neutral-white, $value)
    );
    &:hover {
      svg {
        fill: $value;
      }
    }
    .btn-check:focus + &,
    &:focus {
      background: contrast-color($value, transparent, $value) !important;
      color: contrast-color($value, $value, index.$neutral-white) !important;
      box-shadow: 0 0 0 2px findColor($color, 'fourth') inset !important;

      svg {
        fill: contrast-color($value, $value, index.$neutral-white);
      }
    }
    svg {
      fill: contrast-color($value, $value, index.$neutral-white);
      width: 28px !important;
      height: 28px !important;
    }
  }
}

@each $color, $value in index.$theme-colors {
  .btn-outline-#{$color} {
    @include index.button-outline-variant(
      $color: $value,
      $color-hover: contrast-color(check-light($value, index.$color-contrast-light), index.$neutral-white, $value)
    );

    background: contrast-color($value, transparent, index.$neutral-white) !important;

    &:hover {
      background: contrast-color($value, index.$neutral-white, $value) !important;

      svg {
        fill: contrast-color($value, $value, index.$neutral-white);
      }
    }
    .btn-check:focus + &,
    &:focus {
      background: contrast-color($value, $value, transparent) !important;
      color: contrast-color($value, index.$neutral-white, $value) !important;
      box-shadow: 0 0 0 2px findColor($color, 'fourth') inset !important;
      svg {
        fill: contrast-color($value, index.$neutral-white, $value);
      }
    }
    svg {
      fill: contrast-color($value, index.$neutral-white, $value);
      width: 28px !important;
      height: 28px !important;
    }
  }
}

.btn-link {
  text-underline-offset: map-get(index.$spacers, 8);
  &:active,
  &:visited {
    color: index.$details-links-visited !important;
  }
  &:focus {
    box-shadow: 0 0 0 2px index.$neutral-black inset !important;
  }
}
