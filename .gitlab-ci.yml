stages:
  - build-info
  - code-quality
  - build
  - publish

cache:
  paths:
    - node_modules/
  key: "$CI_BUILD_REF_NAME"

variables:
  NEXUS_PATH: '$NEXUS_GENERAL_REPOSITORY_URL/npm-private/'
  OUTPUT_PATH_TEMP: '${CI_PROJECT_DIR}/tmp'

# CREATE VERSION FILE TO USE IN FUTURE STAGES
build-metadata:
  stage: build-info
  image: docker:20.10.13
  artifacts:
    paths:
      - $OUTPUT_PATH_TEMP
  script:
    - mkdir $OUTPUT_PATH_TEMP
    - cat package.json | grep -e '\"version\"' | grep -oe '[0-9]\.[0-9]\.[0-9]' > $OUTPUT_PATH_TEMP/version.ver

sonarqube-check:
  stage: code-quality
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
  when: manual

build-storybook:
  stage: build
  image: node:14.16.1-alpine3.13
  artifacts:
    paths:
      - storybook-static/**
  script:
    - echo $(cat $OUTPUT_PATH_TEMP/version.ver)
    - npm install
    - npm run build-storybook
  when: manual

publish-storybook-image-nexus-registry:
  image: docker:20.10.13
  stage: publish  
  script:
    - docker login -u $NEXUS_REGISTRY_USER -p $NEXUS_REGISTRY_PASSWORD $NEXUS_REGISTRY_URL    
    - docker build -f Dockerfile -t $NEXUS_REGISTRY_URL/portal-unico/storybook-react:$(cat $OUTPUT_PATH_TEMP/version.ver) .
    - docker push $NEXUS_REGISTRY_URL/portal-unico/storybook-react:$(cat $OUTPUT_PATH_TEMP/version.ver)
  when: manual

publish-design-system-library:
  stage: publish
  image: docker:20.10.13
  script:
    - npm install
    - npm run build
    - echo "@ama:registry=${NEXUS_PATH}" >> .npmrc
    - echo "_auth=${NEXUS_REGISTRY_CREDENTIALS_BASE_64}" >> .npmrc
    - npm publish
  when: manual
